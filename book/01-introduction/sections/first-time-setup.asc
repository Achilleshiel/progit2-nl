[[_first_time]]
=== Git klaarmaken voor eerste gebruik

Nu je Git op je computer hebt staan, is het handig dat je een paar dingen doet om je Gitomgeving aan jouw voorkeuren
aan te passen.
Je hoeft deze instellingen normaliter maar één keer te doen, ze blijven hetzelfde als je een nieuwe versie van Git
installeert.
Je kunt ze ook op elk moment weer veranderen door de commando's opnieuw uit te voeren.

Git bevat standaard een stuk gereedschap genaamd `git config`, waarmee je de configuratie-eigenschappen kunt bekijken en
 veranderen, die alle aspecten van het uiterlijk en gedrag van Git regelen.
Deze eigenschappen kunnen op drie verschillende plaatsen worden bewaard:

1.	Het bestand `/etc/gitconfig`: Bevat eigenschappen voor elk account op de computer en al hun repositories.
 Als je de optie `--system` meegeeft aan `git config`, zal het de configuratiegegevens in dit bestand lezen en
 schrijven.
2.	Het bestand `~/.gitconfig`: Eigenschappen voor jouw account. Je kunt Git dit bestand laten lezen en schrijven door
 de optie `--global` mee te geven.
3.	Het configuratiebestand in de Gitdirectory (dus `.git/config`) van de repository die je op het moment gebruikt:
 Specifiek voor die ene repository.

Elk niveau neemt voorrang boven het voorgaande, dus waarden die in `.git/config` zijn gebruikt zullen worden gebruikt in
 plaats van die in `/etc/gitconfig`.

Op systemen met Windows zoekt Git naar het `.gitconfig`-bestand in de `$HOME` directory (`C:\Users\$USER` voor de
 meesten).
Het zoekt ook nog steeds naar `/etc/gitconfig`, maar dan gerelateerd aan de plek waar je MSys hebt staan, en dat is de
 plek is waar je Git op je Windowscomputer geïnstalleerd hebt.

==== Jouw identiteit

Het eerste wat je zou moeten doen nadat je Git geïnstalleerd hebt, is je gebruikersnaam en e-mail adres opgeven.
Dat is belangrijk omdat elke commit in Git deze informatie gebruikt, en het onveranderlijk ingebed zit in de commits
die je zult beginnen te maken:

[source,console]
----
$ git config --global user.name "John Doe"
$ git config --global user.email johndoe@example.com
----

Nogmaals, dit hoef je maar één keer te doen als je de `--global` optie erbij opgeeft, omdat Git die informatie zal
 gebruiken voor alles wat je doet op dat systeem. Als je een andere naam of e-mail wilt gebruiken voor specifieke
 projecten, kun je het commando uitvoeren zonder de `--global` optie als je in de directory van dat project zit.

Veel van de GUI tools zullen je helpen dit te doen als je ze voor de eerste keer aanroept.

==== Je tekstverwerker

Nu Git weet wie je bent, kun je de standaard tekstverwerker instellen die gebruikt zal worden als Git je een bericht in
 wil laten typen. Normaliter gebruikt Git de standaardtekstverwerker van je systeem, wat meestal Vim is.
Als je een andere tekstverwerker wilt gebruiken, zoals Emacs, kun je het volgende doen:

[source,console]
----
$ git config --global core.editor emacs
----

[WARNING]
====
Vim en Emacs zijn populaire tekstverwerkers die op Unix gebaseerde systemen zoals Linux en Mac vaak door ontwikkelaars
gebruikt worden. Als je hier niet bekend mee bent of als je op een Windows systeem zit, kan het nodig zijn naar
instructies te zoeken hoe jouw favoriete editor voor Git in te stellen.
Als je zo geen editor instelt en je weet niet wat Vim of Emacs zijn, kan het je waarschijnlijk in een heel verwarde
staat brengen zodra een van beiden wordt geactiveerd.
====

==== Je instellingen controleren

Als je je instellingen wilt controleren, kan je het `git config --list` commando gebruiken voor een lijst met alle
 instellingen die Git vanaf die locatie kan vinden:

[source,console]
----
$ git config --list
user.name=John Doe
user.email=johndoe@example.com
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto
...
----

Je zult sommige sleutels misschien meerdere keren langs zien komen, omdat Git dezelfde sleutel uit verschillende
 bestanden heeft gelezen (bijvoorbeeld `/etc/gitconfig` en `~/.gitconfig`).
In dit geval gebruikt Git de laatste waarde van elke unieke sleutel die het tegenkomt.

Je kan ook bekijken wat Git als instelling heeft bij een specifieke sleutel door `git config {sleutel}` in te voeren:

[source,console]
----
$ git config user.name
John Doe
----
