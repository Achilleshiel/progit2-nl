////
Laatst bijgewerkt van progit/progit2 referentie: 6528f318
////

[[_git_branching]]
== Branchen in Git

(((branches)))
Bijna elk VCS ondersteunt een bepaalde vorm van branchen.
Branchen komt erop neer dat je een tak afsplitst van de hoofd-ontwikkellijn en daar verder mee gaat werken zonder
 aan de hoofdlijn te komen.
Bij veel VCS'en is dat nogal een duur proces, vaak wordt er een nieuwe kopie gemaakt van de directory waar je
 broncode in staat, wat lang kan duren voor grote projecten.

Sommige mensen verwijzen naar het branch model in Git als de "killer eigenschap", en het onderscheidt Git zeker in
 de VCS-gemeenschap.
Waarom is het zo bijzonder?
De manier waarop Git brancht is ongelooflijk lichtgewicht, waardoor branch operaties vrijwel instant zijn en het
 wisselen tussen de branches over het algemeen net zo snel.
In tegenstelling tot vele andere VCS's, moedigt Git juist een workflow aan waarbij vaak gebrancht en gemerged wordt,
  zelfs meerdere keren per dag.
Deze eigenschap begrijpen en de techniek beheersen geeft je een krachtig en uniek gereedschap en kan letterlijk de
 manier waarop je ontwikkelt veranderen.

include::sections/nutshell.asc[]

include::sections/basic-branching-and-merging.asc[]

include::sections/branch-management.asc[]

include::sections/workflows.asc[]

include::sections/remote-branches.asc[]

include::sections/rebasing.asc[]

=== Samenvatting

We hebben de basis van branchen en mergen in Git behandeld.
Je zou je op je gemak moeten voelen met het maken en omschakelen naar nieuwe branches, omschakelen tussen branches,
 en lokale branches te mergen.
Je zou ook in staat moeten zijn om je branches te delen door ze naar een gedeelde server te pushen, met anderen op
gedeelde branches samen te werken en je branches te rebasen voordat ze gedeeld zijn.
In het volgende deel gaan we de materie behandelen wat je nodig gaat hebben om jouw eigen Git repository-hosting
servier op te zetten.