////
Laatst bijgewerkt van progit/progit2 referentie: 6528f318
////
== Git en andere systemen

Het is geen perfecte wereld.
Meestal kan je niet meteen elk project waar je mee in aanraking komt omzetten naar Git.
Soms zit je vast op een project dat een ander VCS gebruikt, en wensen dat het Git zou zijn.
We zullen het eerste deel van dit hoofdstuk hebben over over manieren om Git als client te gebruiken als het project
 waar je op werkt op een ander systeem wordt gehost.

Op een gegeven moment zou je een bestaande project misschien willen omzetten naar Git.
Het tweede gedeelte van dit hoofdstuk beschrijft hoe je projecten naar Git kunt migreren uit verschillende specifieke
 systemen, zowel als een manier die je kan helpen als er geen standaard import instrumenten zijn.

=== Git als een client

(((Git als een client)))
Git biedt zo'n prettige ervaring voor ontwikkelaars dat veel mensen een manier hebben gevonden om het te gebruiken op
 hun werkstation, zelfs als de rest van hun team een compleet andere VCS gebruikt.
Er zijn een aantal van deze adapters, die ``bridges'' worden genoemd, beschikbaar.
Ze zullen hier degenen behandelen die je het meest waarschijnlijk in het wild zult tegenkomen.

include::sections/client-svn.asc[]

include::sections/client-hg.asc[]

include::sections/client-p4.asc[]

include::sections/client-tfs.asc[]

[[_migrating]]
=== Migreren naar Git

(((Migreren naar Git)))
Als je een bestaande codebase in een andere VCS hebt, en je hebt besloten om Git te gaan gebruiken, moet je je
 project op de een of andere manier migreren.
Deze paragraaf behandelt een aantal importeerders voor veelgebruikte systemen, en laat je daarna zien hoe je je eigen
 importeur kunt ontwikkelen.
Je zult kunnen lezen hoe gegevens uit een aantal van de grote professionele SCM systemen te importeren, omdat zij het
 leeuwendeel van de gebruikers vormen die overgaan, en omdat het eenvoudig is om instrumenten van hoge kwaliteit te
 pakken te krijgen.

include::sections/import-svn.asc[]

include::sections/import-hg.asc[]

include::sections/import-p4.asc[]

include::sections/import-tfs.asc[]

include::sections/import-custom.asc[]

=== Samenvatting

Je zou je op je gemak moeten voelen om Git als een client te gebruiken voor andere versiebeheer systemen, of bijna
 ieder bestaand repository te importeren in een Git versie zonder gegevens te verliezen.
Het volgende hoofdstuk zal het ruwe binnenwerk van Git behandelen, zodat je iedere byte kunt bewerken, als dat nodig
 is.