////
Laatst bijgewerkt van progit/progit2 referentie: 6528f318
////

[[_github]]
== GitHub

(((GitHub)))
GitHub is de grootste host voor Git repositories, en het is het middelpunt van samenwerking voor miljioenen
ontwikkelaars en projecten.
Het leeuwendeel van alle Git repositories worden op GitHub gehost, en veel open-source projecten gebruiken het voor
 Git hosting, issue tracking, code review en andere zaken.
Dus alhoewel het geen direct onderdeel is van het Git open source project, is er een grote kans dat je op enig
 moment met GitHub wilt of moet interacteren als je beroepsmatig Git gebruikt.

Dit hoofdstuk bespreekt hoe je GitHub doelmatig gebruiken kunt.
We zullen het inschrijven en het beheren van een account, het maken en gebruiken van Git repositories behandelen, veel
 gebruikte workflows voor het bijdragen aan projecten en het accepteren van bijdragen aan jouw project, de
 programmatische interface van GitHub bespreken en veel kleine tips geven om je het leven in het algemeen makkelijker
 te maken.

Als je niet ge√Ønteresseerd bent in het gebruik van GitHub als host voor je eigen projecten of om samen te werken met
andere projecten die op GitHub zijn gehost, kan je zonder problemen doorgaan naar <<_git_tools>>.

[WARNING]
.Interfaces veranderen
====
Het is belangrijk om op te merken dat, zoals veel actieve websites, het onvermijdelijk is dat de gebruikers interface
elementen in deze screenshots zullen wijzigen.
Hopelijk komt het algemene beeld van wat we hier proberen te bereiken nog steeds overeen met de huidige situatie,
 maar als je meer recente versie van deze schermen wilt, de online versie van dit boek zou nieuwere screenshots
 kunnen bevatten.
====

include::sections/1-setting-up-account.asc[]

include::sections/2-contributing.asc[]

include::sections/3-maintaining.asc[]

include::sections/4-managing-organization.asc[]

include::sections/5-scripting.asc[]

=== Samenvatting

Je bent nu een GitHub gebruiker.
Je weet hoe je een account aanmaakt, een organisatie kunt onderhouden, repositories aanmaken en pushen, hoe je bijdraagt
 aan projecten van anderen en bijdragen van anderen kunt accepteren.
In het volgende hoofdstuk zal je kennismaken met krachtigere instrumenten en tips krijgen hoe met complexe situaties
om te gaan waarna je een echte meester zult zijn in het gebruik van Git.