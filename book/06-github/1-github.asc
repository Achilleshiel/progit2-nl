////
 Attentie heren en dames vertalers.

 Ik zou het volgende willen voorstellen:
 Er zijn bepaalde termen die voor de gemiddelde Nederlandse computergebruiker
 veel beter klinken (of bekender voorkomen) dan de orginele Engelse term. In het
 begin zullen deze termen niet vaak voorkomen, maar in de meer diepgaandere
 hoofdstukken komen deze steeds meer voor. Termen als "Committen", "Mergen"
 en "Applyen" klinken beter dan "Plegen" of "Toepassen", "Samenvoegen" en
 "Toepassen" (wat bovendien slecht valt te onderscheiden van de commit-toepassing).
 De mensen die dit boek lezen zijn, naar mijn bescheiden
 inschatting, al redelijk op de hoogte van versiebeheer en passen (zie ik in
 de praktijk) deze termen al toe. Een nieuwe terminologie introduceren lijkt
 me dan ook niet noodzakelijk.
 Verder blijven er altijd kreten over als "directory", wat vertaald zou kunnen
 worden als "map", maar bij het Engelse werkwoord to map krijgen we dan weer het
 probleem: hoe dit weer te vertalen? Daarom zou ik willen voorstellen om deze
 basis-termen toch onvertaald te laten.

 Twijfelgevallen zullen altijd blijven zoals de term "file", daarvan wordt in de
 praktijk zowel de term file als bestand gebruikt. Ik denk dat we hier moeten
 kijken hoe het in de context past. De term "client" heb ik, lettend op de context
 vaak vertaald met "werkstation".
 Termen als als "tool" en (ik zit zelf nog op een mooie Nederlandse term
 te broeden) "plumbing" zijn een iets grotere uitdaging, hierbij stel ik voor om
 eenmalig een Nederlandse vertaling te geven, tussen haakjes de Engelse term te
 geven en in het vervolg de Engelse term te gebruiken. Wederom is de context hier
 belangrijk.

 Verder stel ik ook voor om de regels op https://onzetaal.nl/taaladvies zoveel
 mogelijk te volgen. Bijvoorbeeld de regels omtrent het spellen van Engelse
 werkwoorden die in het Nederlands gebruikt worden.

 Let wel: ik wil niemand tot iets verplichten, maar ik denk dat we moeten
 streven naar een zo duidelijk mogelijke en best bij de praktijk aansluitende
 vertaling moeten proberen te maken.

Veel succes en plezier bij het vertalen...

Laatst bijgewerkt van progit/progit2 referentie: 6528f318
////

[[_github]]
== GitHub

(((GitHub)))
GitHub is de grootste host voor Git repositories, en het is het middelpunt van samenwerking voor miljioenen
ontwikkelaars en projecten.
Het leeuwendeel van alle Git repositories worden op GitHub gehost, en veel open-source projecten gebruiken het voor
 Git hosting, issue tracking, code review en andere zaken.
Dus alhoewel het geen direct onderdeel is van het Git open source project, is er een grote kans dat je op enig
 moment met GitHub wilt of moet interacteren als je beroepsmatig Git gebruikt.

Dit hoofdstuk bespreekt hoe je GitHub doelmatig gebruiken kunt.
We zullen het inschrijven en het beheren van een account, het maken en gebruiken van Git repositories behandelen, veel
 gebruikte workflows voor het bijdragen aan projecten en het accepteren van bijdragen aan jouw project, de
 programmatische interface van GitHub bespreken en veel kleine tips geven om je het leven in het algemeen makkelijker
 te maken.

Als je niet ge√Ønteresseerd bent in het gebruik van GitHub als host voor je eigen projecten of om samen te werken met
andere projecten die op GitHub zijn gehost, kan je zonder problemen doorgaan naar <<_git_tools>>.

[WARNING]
.Interfaces veranderen
====
Het is belangrijk om op te merken dat, zoals veel actieve websites, het onvermijdelijk is dat de gebruikers interface
elementen in deze screenshots zullen wijzigen.
Hopelijk komt het algemene beeld van wat we hier proberen te bereiken nog steeds overeen met de huidige situatie,
 maar als je meer recente versie van deze schermen wilt, de online versie van dit boek zou nieuwere screenshots
 kunnen bevatten.
====

include::sections/1-setting-up-account.asc[]

include::sections/2-contributing.asc[]

include::sections/3-maintaining.asc[]

include::sections/4-managing-organization.asc[]

include::sections/5-scripting.asc[]

=== Samenvatting

Je bent nu een GitHub gebruiker.
Je weet hoe je een account aanmaakt, een organisatie kunt onderhouden, repositories aanmaken en pushen, hoe je bijdraagt
 aan projecten van anderen en bijdragen van anderen kunt accepteren.
In het volgende hoofdstuk zal je kennismaken met krachtigere instrumenten en tips krijgen hoe met complexe situaties
om te gaan waarna je een echte meester zult zijn in het gebruik van Git.