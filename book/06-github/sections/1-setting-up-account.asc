=== Account setup en configuratie

(((GitHub, user accounts)))
Het eerste wat je dient te doen is om een gratis user account aan te maken.
Eenvoudigweg https://github.com[] bezoeken, een gebruikersnaam kiezen die nog niet in gebruik is, een email adres
 en een wachtwoord opgeven, en op de grote groene ``Sign up for GitHub'' knop klikken.

.Het GitHub aanmeldings-formulier.
image::images/signup.png[Het GitHub aanmeldings-formulier.]

Het volgende wat je zult zien is de prijslijst voor opwaardeer schema's, maar deze kan je op dit momment veilig negeren.
GitHub zal je een email sturen om het opgegeven adres te verifiëren.
Ga dit nu even doen, het is nogal belangrijk (zoals we straks zullen zien).

[NOTE]
====
GitHub levert al haar functionaliteit met gratis account, met de beperking dat al je projecten compleet openbaar zijn
 (iedereen heeft leesrechten).
De betaalde diensten van GitHub bevatten een aantal besloten projecten, maar we zullen deze in dit boek niet behandelen.
====

Door op het Octocat logo links boven op het scherm te klikken wordt je naar je dashboard pagina geleid.
Je bent nu klaar om GitHub te gebruiken.

==== SSH Toegang

(((SSH keys, with GitHub)))
Vanaf nu, ben je compleet in staat om contact met Git repositories te maken met het `https://` protocol, je bekend
 makend met de gebruikersnaam en wachtwoord die je zojuist opgezet hebt.
Echter, om eenvoudigweg openbare projecten te clonen hoef je niet eens in te schrijven, het account dat we zojuist
 gemaakt hebben gaat een rol spelen als we straks projecten gaan forken en als naar onze forks gaan pushen.

Als je SSH remotes wilt gebruiken, zal je een publieke sleutel moeten configureren.
(Als je er nog geen hebt, zie <<ch04-git-server#r_generate_ssh_key>>.)
Open je account instellingen met de link rechtsboven op het scherm:

.De ``Account settings'' link.
image::images/account-settings.png[De ``Account settings'' link.]

Selecteer dan de ``SSH keys'' sectie aan de linker kant.

.De ``SSH keys'' link.
image::images/ssh-keys.png[De ``SSH keys'' link.]

Van daar, klik op de ``Add an SSH key'' knop, geef je sleutel een naam, plak de inhoud van je `~/.ssh/id_rsa.pub` (of
 welke naam je eraan gegeven hebt) public-key bestand in het tekstgebied en klik ``Add key''.

[NOTE]
====
Zorg ervoor de je je SSH sleuten een naam geeft die je kunt onthouden. Je kunt elk van je sleutels benoemen (bijv.
 "Mijn laptop" of "Werk account") zodat je, als je een sleutel moet innemen, je eenvoudig kunt zien welke je moet
 hebben.
====

[[r_personal_avatar]]
==== Jouw avatar

Daarna kan je, als je dat wilt, de gegenereerde avatar vervangen met een afbeelding van jouw keuze. Ga eerst naar de
 ``Profile'' tab (boven de SSH Keys tab) en klik op ``Upload new picture''.

.De ``Profile'' link.
image::images/your-profile.png[De ``Profile'' link.]

We zullen een kopie van het Git logo gebruiken dat op je harde schijf staat en dan krijgen we de kans om het bij te
 snijden.

.Je avatar bijsnijden
image::images/avatar-crop.png[Je geüploade avatar bijsnijden.]

Nu zal iedereen jouw avatar naast je gebruikersnaam zien overal waar je op de site interacteert.

Als je toevallig een geüploade avatar op de populaire Gravatar dienst hebt (vaak gebruikt voor Wordpress accounts),
 zal die avatar standaard worden gebruikt en hoef je deze stap niet te doen.

==== Je email adressen

De manier waarop GitHub je Git commits koppelt aan je gebruiker is via het email adres. Als je meerdere email
 adressen gebruikt in je commits en je wilt dat GitHub ze juist koppelt, moet je alle email adressen die je
 gebruikt hebt toevoegen aan de Emails sectie van de admin sectie.

[[r_add_email_addresses]]
.Voeg email adressen toe
image::images/email-settings.png[Voeg al je email adressen toe.]

In <<r_add_email_addresses>> kunnen we een aantal van de verschillende stadia zien die mogelijk zijn.
Het bovenste adres is geverifiëerd en is gezet als het primaire adres, wat inhoudt dat notificaties en nota's naar
 dit adres gestuurd zullen worden.
Het tweede adres is geverifiëerd en kan dus als primair worden gekozen als je ze zou willen wisselen.
Het laatste adres is niet geverifiëerd, wat inhoudt dat je deze niet je primaire adres kunt maken.
Als GitHub ziet een van deze in commit berichten zie in een van de repositories op de site zal deze nu aan jouw
 gebruiker worden gekoppeld.

==== Dubbele factor authenticatie

Tot slot, als extra beveiliging, zou je zeker de dubbele factor authenticatie of ``2FA'' willen inrichten.
Dubbele factor authenticatie is een authenticatie mechanisme die de laatste tijd steeds populairder wordt om het risico
 te ondervangen dat jouw account wordt misbruikt als je wachtwoord op de een of andere manier wordt gestolen.
Door dit aan te zetten zal GitHub je naar twee manieren van authenticeren vragen, zodat wanneer een van deze
 gecompromitteerd is een aanvaller niet in staat zal zijn je account te gebruiken.

Je kunt de dubbele factor authenticatie instelling vinden onder de Security tab van je Account instellingen.

.2FA in de Security Tab
image::images/2fa-1.png[2FA in de Security Tab]

Als je de ``Set up two-factor authentication'' knop klikt, zal dit je naar een configuratie pagina leiden waar je kunt
 kiezen om een telefoon app te gebruiken om een tweede code te genereren (een ``time based one-time password'' - een
 tijdsgerelateerde eenmalig wachtwoord), of je kunt GitHub elke keer als je moet inloggen een code laten SMSsen.

Nadat je een voorkeursmethode hebt gekozen en de instructies volgt voor het instellen van 2FA, zal je account iets
 veiliger zijn en zal je een aanvullende code moeten opgeven bij je wachtwoord elke keer als je in GitHub inlogt.
